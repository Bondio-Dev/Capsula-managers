#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö RAG —Å–∏—Å—Ç–µ–º—ã
–ó–∞–≥—Ä—É–∂–∞–µ—Ç –∏ –∏–Ω–¥–µ–∫—Å–∏—Ä—É–µ—Ç –≤—Å–µ CSV –∏ TXT —Ñ–∞–π–ª—ã
"""

import asyncio
import logging
from pathlib import Path
from rag_system import RAGSystem
import config

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

async def main():
    """–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    print("üöÄ –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –¥–ª—è RAG —Å–∏—Å—Ç–µ–º—ã...")

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ñ–∞–π–ª–æ–≤ –¥–∞–Ω–Ω—ã—Ö
    if not config.DOCUMENTS_DIR.exists():
        print(f"‚ùå –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è {config.DOCUMENTS_DIR} –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!")
        print("–°–æ–∑–¥–∞–π—Ç–µ –ø–∞–ø–∫—É 'data/documents' –∏ –ø–æ–º–µ—Å—Ç–∏—Ç–µ —Ç—É–¥–∞ CSV –∏ TXT —Ñ–∞–π–ª—ã")
        return

    files = list(config.DOCUMENTS_DIR.glob("*"))
    if not files:
        print(f"‚ùå –í –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ {config.DOCUMENTS_DIR} –Ω–µ—Ç —Ñ–∞–π–ª–æ–≤!")
        return

    print(f"üìÅ –ù–∞–π–¥–µ–Ω–æ —Ñ–∞–π–ª–æ–≤: {len(files)}")
    for file in files:
        print(f"  - {file.name}")

    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º RAG —Å–∏—Å—Ç–µ–º—É
    rag_system = RAGSystem()

    try:
        await rag_system.initialize()

        stats = await rag_system.get_stats()
        print("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω–∞!")
        print(f"üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
        print(f"  - –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ —Ñ–∞–π–ª–æ–≤: {stats['total_documents']}")
        print(f"  - –°–æ–∑–¥–∞–Ω–æ —Ñ—Ä–∞–≥–º–µ–Ω—Ç–æ–≤: {stats['total_chunks']}")
        print(f"  - –í—Ä–µ–º—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: {stats['last_updated']}")

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: {e}")
        logger.error(f"–û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    asyncio.run(main())
